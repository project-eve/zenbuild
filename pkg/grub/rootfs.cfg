set timeout=5
set gfxpayload=text
set default=0

set linuxkit_cmdline=
set grub_virt=
set rootfs_root=

function set_global {
   set $1="$2"
   export $1
}

function set_grub_virt {
   smbios -t 1 -s 0 --set smb_vendor
   if regexp QEMU $smb_vendor ; then
     set_global grub_virt qemu
   else
     set_global grub_virt baremetal
   fi
}

function set_rootfs_root {
   # For some silly reason we have to use vda on ARM
   if regexp x86_64 "$grub_cpu" ; then
     set base_dev=/dev/sd
   else
     set base_dev=/dev/vd
   fi
   
   # we could be running off of CD in two situation: qemu
   # and BIOS/EFI emulating CD reading off of USB stick.
   # The problem with the later is that when the Linux
   # kicks-in, it will still recognize the USB stick as
   # a /dev/sd* device not /dev/sr*. Since we pass that
   # to Linux kernel it means we wouldn't be able to boot
   # off of actual CD-ROM on a real device. Oh well...
   if regexp -s id '^cd([0-9]+)$' "$root" ; then
     if regexp qemu $grub_virt ; then
       set rootfs_root="/dev/sr$id ro"
     else
       set rootfs_root=${base_dev}b
     fi
   else
     # we really prefer to get the ID from the parition, but
     # we have to be careful since probe is known to coredump
     # if run on targets without partition table. And sometimes... 
     if regexp "," "$prefix" ; then
       probe --set partuuid -U $root
     fi
     # ...if that's not available, there's a few fallbacks
     if regexp '[0-9a-fA-F-]' "$partuuid" ; then
       set rootfs_root=PARTUUID=$partuuid
     elif regexp '^hd0$' "$root" ; then
       set rootfs_root=${base_dev}a
     elif regexp '^hd1$' "$root" ; then
       set rootfs_root=${base_dev}b
     elif regexp '^hd2$' "$root" ; then
       set rootfs_root=${base_dev}c
     elif regexp '^hd3$' "$root" ; then
       set rootfs_root=${base_dev}d
     fi
   fi

   export rootfs_root
}

function set_generic {
   set_global linux /boot/kernel
   # the following is true everywhere, but on x86/bare-metail -- see bellow
   set_global linux_console "console=hvc0"
}

function set_x86_64 {
   set_global dom0_settings "dom0_mem=1024M,max:1024M dom0_max_vcpus=1 dom0_vcpus_pin smt=false"
   set_global boot_xen_cmd multiboot2
   set_global boot_dom0_cmd module2
   set_global xen /boot/xen.gz
   set_global xen_console " "
}

function set_x86_64_baremetal {
   set_generic
   set_x86_64
   set_global xen_qemu_tweaks " "
   set_global linux_qemu_tweaks " "
   set_global linux_console "console=tty0"
}

function set_x86_64_qemu {
   set_generic
   set_x86_64
   set_global xen_qemu_tweaks "clocksource=pit"
   set_global linux_qemu_tweaks "clocksource=tsc clocksource_failover=xen"
   set_global xen_console "console=com1"
}

function set_arm64 {
   set_global dom0_settings "dom0_mem=1024M dom0_max_vcpus=1 dom0_vcpus_pin"
   set_global boot_xen_cmd xen_hypervisor
   set_global boot_dom0_cmd xen_module
   set_global xen /boot/xen.efi
   set_global xen_console "console=dtuart"
   set_global xen_qemu_tweaks " "
}

function set_arm64_baremetal {
   set_generic
   set_arm64
   # this only makes sense for HiKey
   set_global devicetree /EFI/BOOT/hi6220-hikey.dtb
   set_global linux_qemu_tweaks " "
}

function set_arm64_qemu {
   set_generic
   set_arm64
   set_global devicetree /EFI/BOOT/virt-gicv3.dtb
   set_global linux_qemu_tweaks "hmp-unsafe=true"
}

set_grub_virt
set_rootfs_root
set_${grub_cpu}_${grub_virt}

menuentry 'Boot Zenix' {
        $boot_xen_cmd  $xen $xen_console $xen_qemu_tweaks $dom0_settings
        $boot_dom0_cmd $linux $linux_console $linux_qemu_tweaks $linuxkit_cmdline root=$rootfs_root text
        if regexp '/' "$devicetree" ; then
           devicetree $devicetree
        fi
}

submenu 'Set Zenix Options' {
   menuentry 'force serial console on x86/baremetal' {
      set_global xen_console "com1=115200,8n1 console=com1"
      set_global linux_console "console=hvc0"
   }

   menuentry 'set x86/baremetal boot options' {
      set_x86_64_baremetal 
   }

   menuentry 'set x86/qemu boot options' {
      set_x86_64_qemu 
   }

   menuentry 'set ARM/baremetal boot options' {
      set_arm64_baremetal 
   }

   menuentry 'set ARM/qemu boot options' {
      set_arm64_qemu
   }

   menuentry 'pause before install' {
      set_global linuxkit_cmdline zenix_pause_before_install
   }

   menuentry 'pause after install' {
      set_global linuxkit_cmdline zenix_pause_after_install
   }

   menuentry 'skip installing rootfs' {
      set_global linuxkit_cmdline zenix_install_skip_rootfs
   }

   menuentry 'skip installing config' {
      set_global linuxkit_cmdline zenix_install_skip_config
   }

   menuentry 'skip installing persist' {
      set_global linuxkit_cmdline zenix_install_skip_persist
   }

   menuentry 'set the target installation disk' {
      set_global linuxkit_cmdline "zenix_install_disk=XXX"
   }

   menuentry 'show boot options' {
      set_global zboot1 "$boot_xen_cmd  $xen $xen_console $xen_qemu_tweaks $dom0_settings"
      set_global zboot2 "$boot_dom0_cmd $linux $linux_console $linux_qemu_tweaks $linuxkit_cmdline root=$rootfs_root text"
      if regexp '/' "$devicetree" ; then
        set_global zboot3 "devicetree $devicetree"
      else
        set_global zboot3 " "
      fi
      set
   }
}
